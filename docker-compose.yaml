version: '3'

services:
  apigateway:
    container_name: apigateway
    build:
      context: apigateway
      dockerfile: Dockerfile
    environment:
      SERVICE_A: "http://service_a:8081"
      SERVICE_B: "http://service_b:8082"
      CLIENT: "https://client:8087"
    depends_on:
      - service_a
      - service_b
    deploy:
      replicas: 1

  service_a:
    container_name: service_a
    build:
      context: services/service-a
      dockerfile: Dockerfile
    environment:
      SERVICE_B: "http://service_b:8082"
    depends_on:
      - service_b
    deploy:
      replicas: 1

  service_b:
    container_name: service_b
    build:
      context: services/service-b
      dockerfile: Dockerfile
    environment:
      DB_CONN: "mysql+mysqlconnector://root:pass123@database:3306/Library"
    depends_on:
      - database
    deploy:
      replicas: 1

  client:
    container_name: client
    build:
      context: client
      dockerfile: Dockerfile
    deploy: 
      replicas: 1

  database:
    image: mysql:latest
    container_name: database
    environment:
      MYSQL_DATABASE: Library
      MYSQL_ROOT_PASSWORD: pass123
    ports:
      - 3306:3306
    volumes:
      - "./database/init.sql:/docker-entrypoint-initdb.d/init.sql"

  proxy:
    image: nginx:latest
    depends_on:
      - client
      - apigateway
      - service_a
      - service_b
    ports:
      - 443:443
    volumes:
      - ./cert:/etc/nginx/ssl
      - ./nginx.conf:/etc/nginx/nginx.conf